import { Meteor } from 'meteor/meteor';
import { TasksCollection } from '/imports/api/TasksCollection';
import "../imports/api/TasksPublications";
import "../imports/api/TasksMethods";
import {TaskType} from "/imports/types/TaskType";

type NewTask = Omit<TaskType, '_id'>;

const insertTask = async (taskText: string):Promise<void> => {
  const task: NewTask = {
    text: taskText,
    // isChecked: false,
    createdAt: new Date(),
  };
  await TasksCollection.insertAsync(task);
};

Meteor.startup(async () => {
  if ((await TasksCollection.find().countAsync()) === 0) {
    [
      '–°–º–∞–π–ª–∏–∫',
      '–¶–≤–µ—Ç–æ–∫',
      '–°–æ–ª–Ω—Ü–µ',
      '–§—É—Ç–±–æ–ª',
      '–ê–π—Ç–∏–≥–µ–Ω–∏–∫',
    ].forEach(insertTask);
  }
});
// import { Meteor } from 'meteor/meteor';
// import '../imports/api/roomsMethods'; // <-- –ø–æ–¥–∫–ª—é—á–∞–µ–º –º–µ—Ç–æ–¥—ã!
// import '../imports/api/roomsPublications'; // <-- –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏!
//
// Meteor.startup(() => {
//     console.log('üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω');
// });